import { ISessionInfo, ISessionInternalInfo, ISessionInfoManager, ISessionInfoManagerOptions, IStorageUtility } from "@inrupt/solid-client-authn-core";
import { fetch } from "cross-fetch";
export declare function getUnauthenticatedSession(): ISessionInfo & {
    fetch: typeof fetch;
};
export declare function clear(sessionId: string, storage: IStorageUtility): Promise<void>;
export declare class SessionInfoManager implements ISessionInfoManager {
    private storageUtility;
    constructor(storageUtility: IStorageUtility);
    update(_sessionId: string, _options: ISessionInfoManagerOptions): Promise<void>;
    get(sessionId: string): Promise<(ISessionInfo & ISessionInternalInfo) | undefined>;
    getAll(): Promise<(ISessionInfo & ISessionInternalInfo)[]>;
    clear(sessionId: string): Promise<void>;
    register(sessionId: string): Promise<void>;
    getRegisteredSessionIdAll(): Promise<string[]>;
    clearAll(): Promise<void>;
}
