"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockStorageUtility = exports.mockStorage = exports.StorageUtilityMock = exports.StorageUtilityGetResponse = void 0;
const StorageUtility_1 = __importDefault(require("../StorageUtility"));
exports.StorageUtilityGetResponse = "getResponse";
exports.StorageUtilityMock = {
    get: async (key, options) => exports.StorageUtilityGetResponse,
    set: async (key, value) => {
    },
    delete: async (key) => {
    },
    getForUser: async (userId, key, options) => exports.StorageUtilityGetResponse,
    setForUser: async (userId, values, options) => {
    },
    deleteForUser: async (userId, key, options) => {
    },
    deleteAllUserData: async (userId, options) => {
    },
};
const mockStorage = (stored) => {
    const store = stored;
    return {
        get: async (key) => {
            if (store[key] === undefined) {
                return undefined;
            }
            if (typeof store[key] === "string") {
                return store[key];
            }
            return JSON.stringify(store[key]);
        },
        set: async (key, value) => {
            store[key] = value;
        },
        delete: async (key) => {
            delete store[key];
        },
    };
};
exports.mockStorage = mockStorage;
const mockStorageUtility = (stored, isSecure = false) => {
    if (isSecure) {
        return new StorageUtility_1.default((0, exports.mockStorage)(stored), (0, exports.mockStorage)({}));
    }
    return new StorageUtility_1.default((0, exports.mockStorage)({}), (0, exports.mockStorage)(stored));
};
exports.mockStorageUtility = mockStorageUtility;
//# sourceMappingURL=StorageUtility.js.map